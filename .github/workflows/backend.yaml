concurrency:
  group: backend-${{ github.event.pull_request.number || github.ref }}
jobs:
  build_jdk:
    env:
      MAVEN_OPTS: -Xmx2G -Xms2G
    name: Build_JDK
    needs: check
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
    - continue-on-error: true
      name: Set up JDK ${{ matrix.jdk }}
      uses: actions/setup-java@v2
      with:
        distribution: adopt
        java-version: ${{ matrix.jdk }}
    - continue-on-error: true
      name: Cache local Maven repository
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-maven-${{ hashFiles('pom.xml') }}
        path: '~/.m2/repository/*/*/*

          !~/.m2/repository/org/apache/flink

          '
        restore-keys: '${{ runner.os }}-maven-

          '
    - continue-on-error: true
      name: Cache local Flink repository
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-${{ matrix.flink }}-maven-${{ hashFiles('pom.xml') }}
        path: ~/.m2/repository/org/apache/flink
        restore-keys: '${{ runner.os }}-${{ matrix.flink }}-maven-

          '
    - continue-on-error: true
      name: Build and Package
      run: "./mvnw -B clean install \\\n        -Dmaven.test.skip=false \\\n     \
        \  -Dspotless.check.skip=true \\\n       -Denforcer.skip=false \\\n      \
        \ -Dmaven.javadoc.skip=true \\\n       -P prod,scala-2.12,flink-single-version,flink-${{\
        \ matrix.flink }},maven-central \\\n       --no-snapshot-updates\n"
    - continue-on-error: true
      name: Check package size
      run: './check_package_size.sh

        '
    strategy:
      fail-fast: true
      matrix:
        flink:
        - 1.14
        - 1.15
        - 1.16
        - 1.17
        - 1.18
        - 1.19
        jdk:
        - 8
        - 11
    timeout-minutes: 30
  build_npm:
    env:
      MAVEN_OPTS: -Xmx2G -Xms2G
    name: Build_NPM
    needs: check
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
    - continue-on-error: true
      id: filter
      uses: dorny/paths-filter@v2
      with:
        filters: "frontend:\n  - 'dinky-web/**'\n"
    - continue-on-error: true
      if: steps.filter.outputs.frontend == 'true'
      uses: actions/setup-node@v3
      with:
        node-version: 16
    - continue-on-error: true
      id: npm-cache-dir
      if: steps.filter.outputs.frontend == 'true'
      name: Get npm cache directory
      run: 'echo "::set-output name=dir::$(npm config get cache)"

        '
    - continue-on-error: true
      id: npm-cache
      if: steps.filter.outputs.frontend == 'true'
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-node-${{ hashFiles('dinky-web/**/package.json') }}
        path: '${{ steps.npm-cache-dir.outputs.dir }}

          dinky-web/dist

          '
        restore-keys: '${{ runner.os }}-node-

          '
    - continue-on-error: true
      if: steps.filter.outputs.frontend == 'true'
      name: Install Dependencies
      run: cd dinky-web && npm install --no-audit --progress=false --legacy-peer-deps
    - continue-on-error: true
      if: steps.filter.outputs.frontend == 'true'
      name: Npm Web Build
      run: cd dinky-web && npm run build
    timeout-minutes: 30
  check:
    name: Check Code
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - continue-on-error: true
      name: Check Style
      run: './mvnw -T 4C -B --no-snapshot-updates clean spotless:check -P flink-all

        '
name: Backend
on:
  repository_dispatch:
    types: trigger-ga___backend.yaml
